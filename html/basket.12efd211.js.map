{"mappings":"YACA,IACMA,EAAY,CAChBC,WAAYC,SAASC,cAAc,mBACnCC,WAAYF,SAASC,cAAc,aAE7BE,EAA2BL,EAA3BC,WAAYK,EAAeN,EAAfI,WACdG,EAAWC,KAAKC,MAAMC,aAAaC,QANlB,YAM8C,GACrEC,QAAQC,IAAIN,GACZ,IAAMO,EAAaP,EAASQ,QAC1B,SAACC,EAAGC,G,OAAsBD,EAAfC,EAAHC,IAAUD,EAALE,K,GACb,GAEFd,EAAWe,YAAc,eAA0BC,OAAXP,GAiBxCR,EAAWgB,mBAAmB,YAA0Bf,EAbnDgB,KACC,SAAAN,G,IAAGO,EAAKP,EAALO,MAAOL,EAAKF,EAALE,MAAOD,EAAGD,EAAHC,IAAKO,EAAIR,EAAJQ,K,MACpB,+CACgBJ,OAAVG,EAAM,MACPH,OADWI,EAAK,sBAEhBJ,OADAH,EAAI,qBACQG,OAAZH,EAAMC,EAAM,oB,IAGpBO,KAAK,I","sources":["src/js/scripts/basket.js"],"sourcesContent":["// import {PRODUCT_LS_KEY} from './script'\nconst PRODUCT_LS_KEY = 'basket';\nconst selectors = {\n  totalPrice: document.querySelector('.js-total-price'),\n  basketList: document.querySelector('.js-list'),\n};\nconst { totalPrice, basketList } = selectors;\nconst products = JSON.parse(localStorage.getItem(PRODUCT_LS_KEY)) || [];\nconsole.log(products);\nconst basketCost = products.reduce(\n  (acc, { qty, price }) => (acc += qty * price),\n  0\n);\ntotalPrice.textContent = `Total price ${basketCost}`;\n\nfunction createMarkup(arr) {\n  const markup = arr\n    .map(\n      ({ model, price, qty, type }) =>\n        ` <li class=\"basket-list-item\">\n        <h2>${model}  ${type}</h2>\n        <p>${qty}</p>\n        <p>${qty * price}</p>\n      </li>`\n    )\n    .join('');\n\n  return markup;\n}\n\nbasketList.insertAdjacentHTML('beforeend', createMarkup(products));\n// createMarkup(products)\n"],"names":["$e8ef4813a0b49e36$var$selectors","totalPrice","document","querySelector","basketList","$e8ef4813a0b49e36$var$totalPrice","$e8ef4813a0b49e36$var$basketList","$e8ef4813a0b49e36$var$products","JSON","parse","localStorage","getItem","console","log","$e8ef4813a0b49e36$var$basketCost","reduce","acc","param","qty","price","textContent","concat","insertAdjacentHTML","map","model","type","join"],"version":3,"file":"basket.12efd211.js.map"}