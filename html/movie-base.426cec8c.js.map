{"mappings":"YAuBA,IAAMA,EAAU,mCACVC,EAAW,+BACXC,EAAW,uBACXC,EAAY,CAChBC,KAAMC,SAASC,cAAc,iBAC7BC,UAAWF,SAASC,cAAc,kBAClCE,OAAQH,SAASC,cAAc,cAEnBG,EAAsBN,EAAtBI,UAAWG,EAAWP,EAAXK,OAMrBG,EAAO,EACPC,EAAW,IAAIC,sBACnB,SAA2BC,EAASC,GAClCD,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,gBAERC,EADAR,GAAQ,GAELS,MAAK,SAAAC,GACJZ,EAAUa,mBAAmB,YAAaC,EAAaF,EAAKG,UACxDH,EAAKI,MAAQJ,EAAKK,aACpBX,EAASY,UAAUV,EAAMT,O,IAG5BoB,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,SAlBlB,CACdG,KAAM,KACNC,WAAY,QACZC,UAAW,IAgCb,SAASf,I,IAAagB,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAC3B,OAAOE,MAAM,GAAcC,OAAXtC,GAA+BsC,OAApBrC,EAAS,aAA2BqC,OAAhBvC,EAAQ,UAAauC,OAALJ,IAAQf,MACrE,SAAAoB,GACE,IAAKA,EACH,MAAM,IAAIC,MAAMD,EAAKE,YAEvB,OAAOF,EAAKG,M,IAgBlB,SAASpB,EAAaqB,GACpB,OAAOA,EACJC,KAAI,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAYF,EAAZE,aAAcC,EAAcH,EAAdG,eAAgBC,EAAYJ,EAAZI,aACjD,MAAO,6EAC2DX,OAArBQ,EAAY,WAC9BR,OADuCU,EAAe,yDAE1EV,OADoBU,EAAe,sBAEnCV,OADAS,EAAa,qBACAT,OAAbW,EAAa,oB,IAGrBC,KAAK,G,CAtBVhC,EAAaR,GACVS,MAAK,SAAAC,GACJZ,EAAUa,mBAAmB,YAAaC,EAAaF,EAAKG,UAC5DZ,EAASwC,QAAQ1C,GACbW,EAAKI,KAAOJ,EAAKK,aAEnBd,EAASwC,QAAQ1C,E,IAGpBkB,OAAM,W,OAAMyB,SAASC,KAAM,kB","sources":["src/js/scripts/movie-base.js"],"sourcesContent":["//Bearer Tokien\n// const BASE_URL = 'https://the-one-api.dev/v2';\n// const EndPOINT = '/character';\n// const Bearer = 'ShvEHHIdjxODJbTBL1Tm'\n// const options ={\n//   headers: {\n//     Authorization: `Bearer ${Bearer}`,\n//     'Content-Type': 'application/json',\n//   }\n// }\n// fetch(`${BASE_URL}${EndPOINT}?limit=32&page=1`, options)\n// .then((resp) =>{\n//   if (!resp) {\n//     throw new Error(resp.statusText)\n//   }\n//   // console.dir(resp.json());\n//   return resp.json()\n// })\n// .then(data => console.log(data))\n// .catch(err=> console.log(err));\n\n///movies\n\nconst API_Key = '1458aa5a0f3768251d977a5078bcec84';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst EndPOINT = '/trending/movie/week';\nconst selectors = {\n  load: document.querySelector('.js-load-more'),\n  movieList: document.querySelector('.js-movie-list'),\n  target: document.querySelector('.js-guard'),\n};\nconst { load, movieList, target } = selectors;\nconst options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 0,\n};\nlet page = 1;\nlet observer = new IntersectionObserver(handlerPagination, options);\nfunction handlerPagination(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      page += 1;\n      serviceMovie(page)\n        .then(data => {\n          movieList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n          if (data.page >= data.total_pages) {\n            observer.unobserve(entry.target);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\n// load.addEventListener('click', onLoadMore);\n// function onLoadMore() {\n//   page += 1;\n//   serviceMovie(page)\n//     .then(data => {\n//       movieList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//       if (data.page >= data.total_pages) {\n//         load.hidden = true;\n//       }\n//     })\n//     .catch(err => console.log(err));\n// }\nfunction serviceMovie(page = 1) {\n  return fetch(`${BASE_URL}${EndPOINT}?api_key=${API_Key}&page=${page}`).then(\n    resp => {\n      if (!resp) {\n        throw new Error(resp.statusText);\n      }\n      return resp.json();\n    }\n  );\n}\nserviceMovie(page)\n  .then(data => {\n    movieList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n    observer.observe(target);\n    if (data.page < data.total_pages) {\n      // load.hidden = false;\n      observer.observe(target);\n    }\n  })\n  .catch(() => location.href ='../../error.html');\n\n\nfunction createMarkup(arr) {\n  return arr\n    .map(({ poster_path, release_date, original_title, vote_average }) => {\n      return `<li class=\"movie-card\">\n        <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${original_title}\" class=\"movie-img\">\n        <h2 class=\"movie-name\">${original_title}</h2>\n        <p>${release_date}</p>\n        <p>${vote_average}</p>\n      </li>`;\n    })\n    .join('');\n}\n"],"names":["$bdc4517d29c76ebd$var$API_Key","$bdc4517d29c76ebd$var$BASE_URL","$bdc4517d29c76ebd$var$EndPOINT","$bdc4517d29c76ebd$var$selectors","load","document","querySelector","movieList","target","$bdc4517d29c76ebd$var$movieList","$bdc4517d29c76ebd$var$target","$bdc4517d29c76ebd$var$page","$bdc4517d29c76ebd$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$bdc4517d29c76ebd$var$serviceMovie","then","data","insertAdjacentHTML","$bdc4517d29c76ebd$var$createMarkup","results","page","total_pages","unobserve","catch","err","console","log","root","rootMargin","threshold","page1","arguments","length","fetch","concat","resp","Error","statusText","json","arr","map","param","poster_path","release_date","original_title","vote_average","join","observe","location","href"],"version":3,"file":"movie-base.426cec8c.js.map"}