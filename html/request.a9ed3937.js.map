{"mappings":"YAEA,IAAMA,EAAU,kCACVC,EAAW,+BACXC,EAAW,iBACXC,EAAY,CAChBC,KAAMC,SAASC,cAAc,eAC7BC,YAAaF,SAASC,cAAc,qBAExBE,EAAgBL,EAAhBI,YAoCd,SAASE,EAAaC,GACpB,OAAOA,EACJC,KACC,SAAAC,G,IACEC,EAAID,EAAJC,KAAIC,EAAAF,EACJG,IACEC,EAASF,EAATE,UAASC,EAAAH,EACTI,UAAaC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,KAGrB,OAAQC,OAAS,6BACWC,OAAdF,EAAK,WACLE,OADcH,EAAK,4BAErBG,OADMT,EAAK,yBAEHS,OADZH,EAAK,qCACiBG,OAAVN,EAAU,mC,IAKjCO,KAAK,G,CAvDoBpB,EAAtBC,KAEHoB,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAIC,iBACJ,IAGIC,EAAAF,EAAIG,cAAcC,SAFXC,EAEPH,EAFFI,MAASC,MACDC,EACNN,EADFO,KAAQF,MAGVG,QAAQC,IAAIH,GACZE,QAAQC,IAAIN,IAUWO,EANPP,EAMaI,EANJD,EAOnBK,EAAS,IAAIC,gBAAgB,CACjCC,IAAKxC,EACLyC,EAAGJ,EACHH,KAAMA,EACNQ,KAAM,OAEDC,MAAM,GAAcrB,OAAXrB,GAAuBqB,OAAZpB,EAAS,KAAUoB,OAAPgB,IAAUM,MAAK,SAAAC,GACpD,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,KAhBfL,MACC,SAAAM,G,OAAS1C,EAAY2C,UAAY1C,EAAayC,EAAKE,SAASC,Y,IAE7DC,OAAM,SAAAC,G,OAAOpB,QAAQqB,IAAID,E,IAE9B,IAAyBlB,EAAMH,EACvBI,C,IAmCRH,QAAQqB,IAAI/C,EAAa,I","sources":["src/js/scripts/request.js"],"sourcesContent":["//https://pokeapi.co\n\nconst API_Key = 'd6ef5733ea0c4b55952125610252606';\nconst BASE_URL = 'http://api.weatherapi.com/v1';\nconst EndPOINT = '/forecast.json';\nconst selectors = {\n  form: document.querySelector('.js-weather'),\n  weatherList: document.querySelector('.js-weather-list'),\n};\nconst { form, weatherList } = selectors;\n\nform.addEventListener('submit', handlerSearch);\n\nfunction handlerSearch(evt) {\n  evt.preventDefault();\n  const {\n    query: { value: country },\n    days: { value: daysLong },\n  } = evt.currentTarget.elements;\n\n  console.dir(daysLong);\n  console.dir(country);\n  // weatherList.innerHTML = createMarkup(data.forecast)\n  // console.logcreateMarkup((data.forecast.forecastday));\n\n  serviceForecast(country, daysLong)\n    .then(\n      data => (weatherList.innerHTML = createMarkup(data.forecast.forecastday))\n    )\n    .catch(err => console.log(err));\n}\nfunction serviceForecast(city, days) {\n  const params = new URLSearchParams({\n    key: API_Key,\n    q: city,\n    days: days,\n    lang: 'uk',\n  });\n  return fetch(`${BASE_URL}${EndPOINT}?${params}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  });\n}\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        date,\n        day: {\n          avgtemp_c,\n          condition: { text, icon },\n        },\n      }) => {\n        return (markup = `<li>\n          <img src=\"${icon}\" alt=\"${text}\">\n          <h3 >Дата:${date}</h3>\n          <h3>${text}</h3>\n          <h3>Температура:${avgtemp_c}</h3>\n          \n        </li>`);\n      }\n    )\n    .join('');\n}\n\nconsole.log(createMarkup([]));\n"],"names":["$8eb005c3edd568cf$var$API_Key","$8eb005c3edd568cf$var$BASE_URL","$8eb005c3edd568cf$var$EndPOINT","$8eb005c3edd568cf$var$selectors","form","document","querySelector","weatherList","$8eb005c3edd568cf$var$weatherList","$8eb005c3edd568cf$var$createMarkup","arr","map","param","date","_day","day","avgtemp_c","_condition","condition","text","icon","markup","concat","join","addEventListener","evt","preventDefault","_elements","currentTarget","elements","country","query","value","daysLong","days","console","dir","city","params","URLSearchParams","key","q","lang","fetch","then","response","ok","Error","statusText","json","data","innerHTML","forecast","forecastday","catch","err","log"],"version":3,"file":"request.a9ed3937.js.map"}