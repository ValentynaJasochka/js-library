{"mappings":"AACA,MACMA,EAAY,CAChBC,WAAYC,SAASC,cAAc,mBACnCC,WAAYF,SAASC,cAAc,cAE/BF,WAAEI,EAAUD,WAAEE,GAAeN,EAC7BO,EAAWC,KAAKC,MAAMC,aAAaC,QANlB,YAM8C,GACrEC,QAAQC,IAAIN,GACZ,MAAMO,EAAaP,EAASQ,QAC1B,CAACC,GAAKC,IAAEA,EAAGC,MAAEA,KAAaF,EAAOC,EAAMC,GACvC,GAEFb,EAAWc,YAAc,eAAeL,IAiBxCR,EAAWc,mBAAmB,YAA0Bb,EAbnDc,KACC,EAACC,MAAEA,EAAKJ,MAAEA,EAAKD,IAAEA,EAAGM,KAAEA,KACpB,+CACMD,MAAUC,sBACXN,qBACAA,EAAMC,uBAGdM,KAAK","sources":["src/js/scripts/basket.js"],"sourcesContent":["// import {PRODUCT_LS_KEY} from './script'\nconst PRODUCT_LS_KEY = 'basket';\nconst selectors = {\n  totalPrice: document.querySelector('.js-total-price'),\n  basketList: document.querySelector('.js-list'),\n};\nconst { totalPrice, basketList } = selectors;\nconst products = JSON.parse(localStorage.getItem(PRODUCT_LS_KEY)) || [];\nconsole.log(products);\nconst basketCost = products.reduce(\n  (acc, { qty, price }) => (acc += qty * price),\n  0\n);\ntotalPrice.textContent = `Total price ${basketCost}`;\n\nfunction createMarkup(arr) {\n  const markup = arr\n    .map(\n      ({ model, price, qty, type }) =>\n        ` <li class=\"basket-list-item\">\n        <h2>${model}  ${type}</h2>\n        <p>${qty}</p>\n        <p>${qty * price}</p>\n      </li>`\n    )\n    .join('');\n\n  return markup;\n}\n\nbasketList.insertAdjacentHTML('beforeend', createMarkup(products));\n// createMarkup(products)\n"],"names":["$c92efc6188038e36$var$selectors","totalPrice","document","querySelector","basketList","$c92efc6188038e36$var$totalPrice","$c92efc6188038e36$var$basketList","$c92efc6188038e36$var$products","JSON","parse","localStorage","getItem","console","log","$c92efc6188038e36$var$basketCost","reduce","acc","qty","price","textContent","insertAdjacentHTML","map","model","type","join"],"version":3,"file":"basket.f5c55a87.js.map"}