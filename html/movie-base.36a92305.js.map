{"mappings":"AAuBA,MAGMA,EAAY,CAChBC,KAAMC,SAASC,cAAc,iBAC7BC,UAAWF,SAASC,cAAc,kBAClCE,OAAQH,SAASC,cAAc,eAE3BF,KAAEK,EAAIF,UAAEG,EAASF,OAAEG,GAAWR,EAMpC,IAAIS,EAAO,EACPC,EAAW,IAAIC,sBACnB,SAA2BC,EAASC,GACjCD,EAAQE,SAAQC,IACRA,EAAMC,iBACXP,GAAQ,EACRQ,EAAaR,GACVS,MAAKC,IACJZ,EAAUa,mBAAmB,YAAaC,EAAaF,EAAKG,SAAS,IAEtEC,OAAMC,GAAOC,QAAQC,IAAIF,K,MAflB,CACdG,KAAM,KACNC,WAAY,QACZC,UAAW,IA6Bb,SAASZ,EAAaa,EAAO,GAC3B,OAAOC,MAAM,kGAAkDD,KAAQZ,MACrEc,IACE,IAAKA,EACH,MAAM,IAAIC,MAAMD,EAAKE,YAEvB,OAAOF,EAAKG,MAAM,G,CAaxB,SAASd,EAAae,GACpB,OAAOA,EACJC,KAAI,EAACC,YAAEA,EAAWC,aAAEA,EAAYC,eAAEA,EAAcC,aAAEA,KAC1C,6EACsCH,WAAqBE,yDACvCA,sBACpBD,qBACAE,uBAGRC,KAAK,G,CAzCVpC,EAAKqC,iBAAiB,SACtB,WACElC,GAAQ,EACRQ,EAAaR,GACVS,MAAKC,IACJZ,EAAUa,mBAAmB,YAAaC,EAAaF,EAAKG,UACxDH,EAAKyB,MAAQzB,EAAK0B,cACpBvC,EAAKwC,QAAS,EAAI,IAGrBvB,OAAMC,GAAOC,QAAQC,IAAIF,I,IAY9BP,EAAaR,GACVS,MAAKC,IACJZ,EAAUa,mBAAmB,YAAaC,EAAaF,EAAKG,UAC5DZ,EAASqC,QAAQvC,GACbW,EAAKyB,KAAOzB,EAAK0B,WAAW,IAIjCtB,OAAMC,GAAOC,QAAQC,IAAIF","sources":["src/js/scripts/movie-base.js"],"sourcesContent":["//Bearer Tokien\n// const BASE_URL = 'https://the-one-api.dev/v2';\n// const EndPOINT = '/character';\n// const Bearer = 'ShvEHHIdjxODJbTBL1Tm'\n// const options ={\n//   headers: {\n//     Authorization: `Bearer ${Bearer}`,\n//     'Content-Type': 'application/json',\n//   }\n// }\n// fetch(`${BASE_URL}${EndPOINT}?limit=32&page=1`, options)\n// .then((resp) =>{\n//   if (!resp) {\n//     throw new Error(resp.statusText)\n//   }\n//   // console.dir(resp.json());\n//   return resp.json()\n// })\n// .then(data => console.log(data))\n// .catch(err=> console.log(err));\n\n///movies\n\nconst API_Key = '1458aa5a0f3768251d977a5078bcec84';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst EndPOINT = '/trending/movie/week';\nconst selectors = {\n  load: document.querySelector('.js-load-more'),\n  movieList: document.querySelector('.js-movie-list'),\n  target: document.querySelector('.js-guard'),\n};\nconst { load, movieList, target } = selectors;\nconst options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 0,\n};\nlet page = 1;\nlet observer = new IntersectionObserver(handlerPagination, options);\nfunction handlerPagination(entries, observer) {\n   entries.forEach(entry => {\n       if (entry.isIntersecting) {      \n      page += 1;\n      serviceMovie(page)\n        .then(data => {\n          movieList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n\nload.addEventListener('click', onLoadMore);\nfunction onLoadMore() {\n  page += 1;\n  serviceMovie(page)\n    .then(data => {\n      movieList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n      if (data.page >= data.total_pages) {\n        load.hidden = true;\n      }\n    })\n    .catch(err => console.log(err));\n}\nfunction serviceMovie(page = 1) {\n  return fetch(`${BASE_URL}${EndPOINT}?api_key=${API_Key}&page=${page}`).then(\n    resp => {\n      if (!resp) {\n        throw new Error(resp.statusText);\n      }\n      return resp.json();\n    }\n  );\n}\nserviceMovie(page)\n  .then(data => {\n    movieList.insertAdjacentHTML('beforeend', createMarkup(data.results));\n    observer.observe(target);\n    if (data.page < data.total_pages) {\n      // load.hidden = false;\n    }\n  })\n  .catch(err => console.log(err));\nfunction createMarkup(arr) {\n  return arr\n    .map(({ poster_path, release_date, original_title, vote_average }) => {\n      return `<li class=\"movie-card\">\n        <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${original_title}\" class=\"movie-img\">\n        <h2 class=\"movie-name\">${original_title}</h2>\n        <p>${release_date}</p>\n        <p>${vote_average}</p>\n      </li>`;\n    })\n    .join('');\n}\n"],"names":["$a050972f26377881$var$selectors","load","document","querySelector","movieList","target","$a050972f26377881$var$load","$a050972f26377881$var$movieList","$a050972f26377881$var$target","$a050972f26377881$var$page","$a050972f26377881$var$observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","$a050972f26377881$var$serviceMovie","then","data","insertAdjacentHTML","$a050972f26377881$var$createMarkup","results","catch","err","console","log","root","rootMargin","threshold","page1","fetch","resp","Error","statusText","json","arr","map","poster_path","release_date","original_title","vote_average","join","addEventListener","page","total_pages","hidden","observe"],"version":3,"file":"movie-base.36a92305.js.map"}